<android.service.notification.StatusBarNotification: android.app.Notification getNotification()> -> _SOURCE_

<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)> -> _SOURCE_
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)> -> _SOURCE_

<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)> -> _SINK_
<okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)> -> _SINK_
<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)> -> _SINK_

<java.net.URLConnection: void <init>(java.net.URL)> -> _SINK_
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_
<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)> -> _SINK_

<java.net.HttpURLConnection: void <init>(java.net.URL)> -> _SINK_
<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_
<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)> -> _SINK_

<java.net.HttpsURLConnection: void <init>(java.net.URL)> -> _SINK_
<java.net.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)> -> _SINK_
<java.net.HttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)> -> _SINK_

<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)> -> _SINK_
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)> -> _SINK_

<java.net.URI: void <init>(java.lang.String)> -> _SINK_
<java.net.URL: void <init>(java.lang.String)> -> _SINK_

<com.android.volley.RequestQueue: com.android.volley.RequestQueue add(com.android.volley.Request)> -> _SINK_
<com.android.volley.RequestQueue: com.android.volley.RequestQueue add(com.android.volley.Request,java.lang.Object)> -> _SINK_

<java.io.FileOutputStream: void write(byte[])> -> _SINK_
<java.io.FileOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.FileOutputStream: void write(int)> -> _SINK_

<java.io.OutputStream: void write(byte[])> -> _SINK_
<java.io.OutputStream: void write(int)> -> _SINK_

<java.io.Writer: void write(char[])> -> _SINK_
<java.io.Writer: void write(char[],int,int)> -> _SINK_
<java.io.Writer: void write(int)> -> _SINK_
<java.io.Writer: void write(java.lang.String)> -> _SINK_
<java.io.Writer: void write(java.lang.String,int,int)> -> _SINK_
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)> -> _SINK_

<java.io.OutputStreamWriter: java.io.Writer append(java.lang.CharSequence)> -> _SINK_

<java.io.DataOutputStream: void writeUTF(java.lang.String)> -> _SINK_
<java.io.DataOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.DataOutputStream: void write(java.lang.String)> -> _SINK_
<java.io.DataOutputStream: void writeBytes(java.lang.String)> -> _SINK_
<java.io.DataOutputStream: void writeChars(java.lang.String)> -> _SINK_

<java.io.FilterOutputStream: void writeUTF(java.lang.String)> -> _SINK_
<java.io.FilterOutputStream: void write(byte[],int,int)> -> _SINK_
<java.io.FilterOutputStream: void write(java.lang.String)> -> _SINK_
<java.io.FilterOutputStream: void writeBytes(java.lang.String)> -> _SINK_
<java.io.FilterOutputStream: void writeChars(java.lang.String)> -> _SINK_
<java.io.FilterOutputStream: void write(byte[])> -> _SINK_

<java.util.zip.ZipOutputStream: void writeUTF(java.lang.String)> -> _SINK_
<java.util.zip.ZipOutputStream: void write(byte[],int,int)> -> _SINK_
<java.util.zip.ZipOutputStream: void write(java.lang.String)> -> _SINK_
<java.util.zip.ZipOutputStream: void writeBytes(java.lang.String)> -> _SINK_
<java.util.zip.ZipOutputStream: void writeChars(java.lang.String)> -> _SINK_
<java.util.zip.ZipOutputStream: void write(byte[])> -> _SINK_
<java.util.zip.ZipOutputStream: void setComment(java.lang.String)> -> _SINK_

<java.util.zip.GZIPOutputStream: void write(byte[],int,int)> -> _SINK_
<java.util.zip.GZIPOutputStream: void writeUTF(java.lang.String)> -> _SINK_
<java.util.zip.GZIPOutputStream: void write(java.lang.String)> -> _SINK_
<java.util.zip.GZIPOutputStream: void writeBytes(java.lang.String)> -> _SINK_
<java.util.zip.GZIPOutputStream: void writeChars(java.lang.String)> -> _SINK_
<java.util.zip.GZIPOutputStream: void write(byte[])> -> _SINK_

<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)> -> _SINK_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> _SINK_
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String, java.lang.String, int)> -> _SINK_


<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String)> -> _SINK_
<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])> -> _SINK_
<android.service.notification.NotificationListenerService: void cancelAllNotifications()> -> _SINK_
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)> -> _SINK_
<android.app.NotificationManager: void notify(int,android.app.Notification)> -> _SINK_
android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification,android.app.NotificationManager$OnNotificationPostedListener)> -> _SINK_
<android.app.NotificationManager: void notify(int,android.app.Notification,android.app.NotificationManager$OnNotificationPostedListener)> -> _SINK_


